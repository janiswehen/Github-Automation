name: Transfer Labels and Assignees

on:
  pull_request_target:
    types:
      - opened

jobs:
  transfer-labels:
    name: Transfer Issue to PR
    runs-on: ubuntu-latest
    steps:
    - name: Get Issue Number from Branch Name
      id: issue_number
      run: |
        echo "${{ github.event.pull_request.head.ref }}" | { grep -oE '^\s*[0-9]+' || echo ""; } | sed 's/^/number=/' >> $GITHUB_OUTPUT
    - name: Transfer Labels and Assignees from Issue to PR
      uses: actions/github-script@v6
      id: my-script
      env:
          ISSUE_NUMBER: '${{ steps.issue_number.outputs.number }}'
          PR_NUMBER: '${{ github.event.pull_request.number }}'
      with:
        github-token: ${{ secrets.BOT_TOKEN }}
        script: |
          const { ISSUE_NUMBER, PR_NUMBER } = process.env;
          console.log(`Issue Number: ${ISSUE_NUMBER}, PR Number: ${PR_NUMBER}`);
          if (ISSUE_NUMBER.length < 1) {
            console.log('No Issue Number found!');
            return;
          }
          
          const issue = await github.rest.issues.get({
            issue_number: ISSUE_NUMBER,
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          const labels = issue.data.labels.map(label => label.name);
          const assignees = issue.data.assignees.map(assignee => assignee.login);

          if (labels.length == 0) {
            console.log('No Labels to transfer');
          } else {
            console.log(`Transferring Labels: ${labels}`);
            await github.rest.issues.addLabels({
              issue_number: PR_NUMBER,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: labels
            });
          }

          if (assignees.length == 0) {
            console.log('No Assignees to transfer');
          } else {
            console.log(`Transferring Assignees: ${assignees}`);
            await github.rest.issues.addAssignees({
              issue_number: PR_NUMBER,
              owner: context.repo.owner,
              repo: context.repo.repo,
              assignees: assignees
            });
          }
